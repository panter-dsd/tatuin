name: CI
on:
  merge_group:
  workflow_dispatch:
  workflow_call:
  pull_request:
  push:
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true
jobs:
  cargo-build:
    name: Cargo Build
    runs-on: ubuntu-latest
    steps:
      - name: Fetch Repository
        uses: actions/checkout@v5
      - name: Install stable toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1
      - name: cargo build
        run: cargo b --workspace --all-targets --all-features
  cargo-fmt:
    name: Cargo fmt
    runs-on: ubuntu-latest
    steps:
      - name: Fetch Repository
        uses: actions/checkout@v5
      - name: Install stable toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          components: rustfmt
      - name: Rustfmt Check
        run: cargo fmt --all --check
  cargo-clippy:
    name: Cargo clippy
    runs-on: ubuntu-latest
    steps:
      - name: Fetch Repository
        uses: actions/checkout@v5
      - name: Install stable toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          components: clippy
      - name: Clippy Check
        run: cargo clippy --workspace --all-targets --all-features -- -Dwarnings
  cargo-doc:
    name: Cargo doc
    runs-on: ubuntu-latest
    steps:
      - name: Fetch Repository
        uses: actions/checkout@v5
      - name: Install stable toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1
      - name: Cargo doc test
        run: cargo doc --workspace --all-features
  check-crate-type:
    uses: ./.github/workflows/crate_type.yaml
  cargo-test-doc:
    needs: check-crate-type
    if: ${{ needs.check-crate-type.outputs.is_lib == 'true' }}
    name: Cargo test doc
    runs-on: ubuntu-latest
    steps:
      - name: Fetch Repository
        uses: actions/checkout@v5
      - name: Install stable toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1
      - name: Cargo test doc
        run: cargo test --doc --workspace --all-features
  cargo-next-test:
    name: Cargo test
    runs-on: ubuntu-latest
    steps:
      - name: Fetch Repository
        uses: actions/checkout@v5
      - name: Install stable toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1
      - name: Install cargo-nextest
        uses: taiki-e/install-action@v2
        with:
          tool: cargo-nextest
      - name: Cargo test
        run: cargo nextest run --workspace --all-targets --all-features --no-tests=pass
  typos-cli:
    name: typos
    runs-on: ubuntu-latest
    steps:
      - name: Fetch Repository
        uses: actions/checkout@v5
      - name: Install Typos
        uses: taiki-e/install-action@v2
        with:
          tool: typos-cli
      - name: run typos
        run: typos
  taplo-toml-fmt:
    name: taplo fmt
    runs-on: ubuntu-latest
    steps:
      - name: Fetch Repository
        uses: actions/checkout@v5
      - name: Install Taplo
        uses: taiki-e/install-action@v2
        with:
          tool: taplo-cli
      - name: Run Taplo
        id: taplo
        run: taplo fmt --check --diff
  markdownlint:
    runs-on: ubuntu-latest
    steps:
      - name: Fetch Repository
        uses: actions/checkout@v5
      - name: markdownlint-cli2-action
        uses: DavidAnson/markdownlint-cli2-action@v20
        with:
          globs: '**/*.md'
  yamlfmt:
    runs-on: ubuntu-latest
    steps:
      - name: Fetch Repository
        uses: actions/checkout@v5
      - uses: actions/setup-go@v6
        with:
          go-version: stable
          cache: false
      - name: Install yamlfmt
        run: go install github.com/google/yamlfmt/cmd/yamlfmt@latest
      - name: Run yamlfmt
        run: yamlfmt --lint .
  cargo-deny:
    uses: ./.github/workflows/cargo_deny.yaml
  check-msrv:
    uses: ./.github/workflows/check_msrv.yaml
  cargo-miri:
    uses: ./.github/workflows/cargo_miri.yaml
  cross-build:
    runs-on: ubuntu-latest
    services:
      docker:
        image: docker:dind
        options: --privileged --shm-size=2g
        volumes:
          - /var/run/docker.sock:/var/run/docker.sock:ro
    name: ${{ matrix.target }} (${{ matrix.os }})
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-freebsd
            cross: true
            # - os: ubuntu-latest
            #   target: x86_64-unknown-linux-gnu
            #   cross: false
            # - os: ubuntu-latest
            #   target: x86_64-unknown-freebsd
            #   cross: true
            # - os: ubuntu-latest
            #   target: x86_64-unknown-linux-musl
            #   cross: true
            # - os: ubuntu-latest
            #   target: aarch64-unknown-linux-gnu
            #   cross: true
            # - os: ubuntu-latest
            #   target: aarch64-unknown-linux-musl
            #   cross: true
            # - os: ubuntu-latest
            #   target: riscv64gc-unknown-linux-gnu
            #   cross: true
            # - os: windows-latest
            #   target: x86_64-pc-windows-msvc
            #   cross: false
            # - os: windows-latest
            #   target: aarch64-pc-windows-msvc
            #   cross: false
            # - os: macos-latest
            #   target: x86_64-apple-darwin
            #   cross: false
            # - os: macos-latest
            #   target: aarch64-apple-darwin
            #   cross: false
    steps:
      - name: Fetch Repository
        uses: actions/checkout@v5
      - name: Install stable toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          targets: ${{ matrix.target }}
      - name: Install cross
        run: cargo install cross --git https://github.com/cross-rs/cross
      - name: cross-build
        run: |
          export HOSTNAME=$(docker ps -ql)
          echo ${HOSTNAME}
          ~/.cargo/bin/cross build -v --target ${{ matrix.target }} --release
